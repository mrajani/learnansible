#!/bin/bash

export VAULT_ADDR=http://127.0.0.1:8200

docker container exec -i {{ mysql_db }} mysql -uroot -p{{ vault_db_password }} \
  <<< "GRANT ALL ON *.* TO '{{ vault_db_user }}'@'%' WITH GRANT OPTION;"

vault login {{ rootkey.stdout }}

## --- Enable Database secrets for MySQL ----#
vault secrets enable -path={{mysql_config_path}} database

## --- Configure MySQL plugin for Vault ----#
vault write {{mysql_config_path}}/config/vault_db \
  plugin_name=mysql-database-plugin \
  connection_url="{% raw %}{{username}}:{{password}}@tcp(localhost:3306)/{% endraw %}" \
  allowed_roles="appuser","appuser-long" \
  username="{{vault_db_user}}" \
  password="{{vault_db_password}}"

##------- max_ttl 24 hours default_ttl 1 hour -----#
vault write {{mysql_config_path}}/roles/appuser-long \
  db_name=vault_db \
  creation_statements="{% raw %}CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT ALL ON {% endraw %}{{vault_app_db}}{% raw %}.* TO '{{name}}'@'%';{% endraw %}" \
  default_ttl="1h" \
  max_ttl="24h"

##------ max_ttl 6minutes default ttl 3 minutes ----#
vault write {{mysql_config_path}}/roles/appuser \
  db_name=vault_db \
  creation_statements="{% raw %}CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT ALL ON {% endraw %}{{vault_app_db}}{% raw %}.* TO '{{name}}'@'%';{% endraw %}" \
  default_ttl="3m" \
  max_ttl="6m"

vault read {{mysql_config_path}}/creds/appuser
vault read {{mysql_config_path}}/creds/appuser-long

## --- Enable Database secrets for PostgreSQL ----#
vault secrets enable -path={{pgsql_config_path}} database

## --- Configure PostgreSQL plugin for Vault ----#
vault write {{pgsql_config_path}}/config/vault_db \
    plugin_name=postgresql-database-plugin \
    allowed_roles="appuser","appuser-long" \
    connection_url="{% raw %}postgresql://{{username}}:{{password}}@localhost:5432/biz_app?sslmode=disable{% endraw %}" \
    username="{{vault_db_user}}" \
    password="{{vault_db_password}}"

## --- Configure a role in PostgreSQL that maps a name in Vault ---#
## --- to an SQL statement to execute to create the database credential ---#
vault write {{pgsql_config_path}}/roles/appuser-long \
    db_name=vault_db \
    creation_statements="{% raw %}CREATE ROLE \"{{name}}\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}'; \
        GRANT SELECT ON ALL TABLES IN SCHEMA public TO \"{{name}}\";{% endraw %}" \
    default_ttl="1h" \
    max_ttl="24h"

vault write {{pgsql_config_path}}/roles/appuser \
    db_name=vault_db \
    creation_statements="{% raw %}CREATE ROLE \"{{name}}\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}'; \
        GRANT SELECT ON ALL TABLES IN SCHEMA public TO \"{{name}}\";{% endraw %}" \
    default_ttl="3m" \
    max_ttl="6m"

vault read {{pgsql_config_path}}/creds/appuser
vault read {{pgsql_config_path}}/creds/appuser-long

#
# @mysql-db-enable.json
# {
#   "plugin_name": "mysql-database-plugin",
#   "allowed_roles": "devuser",
#   "connection_url": "{% raw %}{{username}}:{{password}}@tcp(127.0.0.1:3306)/{% endraw %}",
#   "username": "vaultuser",
#   "password": "secretpassword"
# }
# curl \
#   --header "X-Vault-Token: s.Dbp0WkAQ9u8ejaISjily33u6" \
#   --request POST \
#   --data @mysql-db-enable.json \
#    http://127.0.0.1:8200/v1/mysql/sales/vendor/config/vault_db
