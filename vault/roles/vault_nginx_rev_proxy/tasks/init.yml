---
- name: Initialize Vault if not initialized
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  command: /usr/local/bin/vault operator init -key-shares=5 -key-threshold=3 -format json -tls-skip-verify
  register: unseal_keys
  when: '"Vault is not initialized" in status.stdout'

- name: Parse output of vault init
  set_fact:
    initialized: true
    vault_unseal_keys: "{{ unseal_keys.stdout | from_json }}"
  when: '"Vault is not initialized" in status.stdout'

- name: Create unseal directories
  file:
    path: "{{ item.path }}"
    state: "{{ item.type }}"
  delegate_to: localhost
  connection: local
  with_items:
    - path: "{{ unseal_keys_dir_output }}"
      type: absent
    - path: "{{ unseal_keys_dir_output }}"
      type: directory
    - path: "{{ unseal_keys_dir_output }}/unseal_keys"
      type: touch

- name: Write unseal keys to file
  lineinfile:
    path: "{{ unseal_keys_dir_output }}/unseal_keys"
    line: "{{ item.1 }}"
  with_indexed_items: "{{ vault_unseal_keys.unseal_keys_hex }}"
  delegate_to: localhost
  connection: local

- name: Write root token to file
  copy:
    content: "{{ vault_unseal_keys.root_token }}"
    dest: "{{ unseal_keys_dir_output }}/rootkey"
  delegate_to: localhost
  connection: local

- name: Re Run Vault Init Check
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  command: /usr/local/bin/vault operator init -status -tls-skip-verify
  ignore_errors: true
  register: status
