---
- name: 'Installing {{ packages }} on {{ ansible_hostname }}'
  become: yes
  apt: update_cache=yes name={{ item }} state=present
  loop: '{{ packages }}'
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Install Ansible python package with version specifiers
  pip:
    name:
      - ansible
      - boto
      - boto3
      - docker

- name: 'Install Azure GPG Key'
  become: yes
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present

- name: 'Install Azure Repository'
  become: yes
  apt_repository:
    update_cache: yes
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli {{ ansible_distribution_release }} main
    state: present
    mode: '0600'
    filename: azure-cli

- name: 'Installing Azure CLI'
  become: yes
  apt: update_cache=yes name=azure-cli state=present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: 'Download AWS CLI v2'
  get_url:
    dest: '{{ ansible_env.HOME }}/awscliv2.zip'
    url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
    mode: '0644'

- name: 'Unzip AWS CLI v2'
  unarchive:
    src: '{{ ansible_env.HOME }}/awscliv2.zip'
    dest: /tmp
    remote_src: yes

- name: 'Install AWS CLI v2'
  shell: ./aws/install --update -i "{{ ansible_env.HOME }}/.local/aws-cli" -b "{{ ansible_env.HOME }}/.local/bin"
  args:
    chdir: /tmp/

- name: 'Clean up AWS files'
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/aws
    - "{{ ansible_env.HOME }}/awscliv2.zip"

- name: 'Install tfenv'
  git:
    accept_hostkey: yes
    repo: https://github.com/tfutils/tfenv.git
    dest: '{{ ansible_env.HOME }}/.tfenv'

- name: 'Install GPG'
  lineinfile:
    state: present
    path: '~/.tfenv/use-gpgv'
    line: 'trust-tfenv: yes'
    create: yes
    mode: '0600'

- name: 'Symlinks to Terraform and tfenv'
  file:
    path: ~/.local/bin/{{ item }}
    src: ~/.tfenv/bin/{{ item }}
    state: link
    force: yes
  loop: ['tfenv', 'terraform']

- name: 'Install Terraform using tfenv'
  ignore_errors: True
  shell: '~/.local/bin/tfenv install latest:^{{ tf_ver }} 2>/dev/null'
  args:
    warn: no

- name: 'Use Terraform'
  ignore_errors: True
  shell: '~/.local/bin/tfenv use latest'
  args:
    warn: no

- name: 'Clone Git Secrets'
  git:
    accept_hostkey: yes
    repo: 'https://github.com/awslabs/git-secrets.git'
    dest: '{{ ansible_env.HOME }}/git-secrets'

- name: 'Make install git-secrets for AWS'
  shell:
    chdir: $HOME/git-secrets/
    cmd: make PREFIX=$HOME/.local install

- name: 'Download Keybase'
  get_url:
    dest: '{{ ansible_env.HOME }}/keybase_amd64.deb'
    url: https://prerelease.keybase.io/keybase_amd64.deb
    mode: '0600'

- name: 'Install Keybase'
  become: yes
  apt:
    deb: '{{ ansible_env.HOME }}/keybase_amd64.deb'

- name: 'Set TimeZone'
  become: yes
  timezone:
    name: '{{ timezone }}'
