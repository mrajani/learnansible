#################################################
# Playbook to install Docker and other things
#################################################
---
- name: Create {{ users }} user
  user:
    name: "{{ user }}"
    state: present
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Add the users to 'docker' group to run cmd without sudo
  user:
    name: "{{ user }}"
    groups: docker
    append: yes
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: allow {{ users }} to have passwordless sudo
  lineinfile:
    create: yes
    dest: /etc/sudoers.d/{{ user }}
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo:  deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Install docker-ce docker-ce-cli containerd.io
  apt:
    pkg:
      - docker-ce-cli={{ docker_version }}
      - docker-ce={{ docker_version }}
      - containerd.io

- name: Update apt and install docker-ce-cli {{ docker_version }}
  uri:
    url: "{{ docker_compose_dl_url }}/latest"
    follow_redirects: safe
  register: url_path

- name: Set Fact latest version of Docker Compose
  set_fact:
    dc_version: "{{  url_path.url | regex_replace('https://.*/tag/', '') }}"

- name: Install docker-compose
  get_url:
    url : "{{ docker_compose_dl_url }}/download/{{ dc_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
    dest: /usr/local/bin/docker-compose
    mode: '0755'

- name: Install Docker Python Library
  pip:
    name: docker

# This script gives the list of available docker-ce, filter for the latest
# apt-cache madison docker-ce | cut -d'|' -f2 | tr -d '[:space:]' | head -1